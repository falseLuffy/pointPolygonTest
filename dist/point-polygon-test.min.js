!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t="undefined"!=typeof globalThis?globalThis:t||self).pointPolygonTest=r()}(this,function(){"use strict";function a(t,r){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],e=!0,o=!1,i=void 0;try{for(var u,f=t[Symbol.iterator]();!(e=(u=f.next()).done)&&(n.push(u.value),!r||n.length!==r);e=!0);}catch(t){o=!0,i=t}finally{try{e||null==f.return||f.return()}finally{if(o)throw i}}return n}(t,r)||function(t,r){if(!t)return;if("string"==typeof t)return e(t,r);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(t,r)}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}return function(t,r){var n=r.length,o=[],i=[],e=a(t,2),u=e[0],f=e[1];if(!(n<3))return r.forEach(function(t){var r=a(t,2),n=r[0],e=r[1];o.push(n),i.push(e)}),function(t,r,n,e,o){for(var i=!1,u=0,f=t-1;u<t;f=u++)n[u]>o!=n[f]>o&&e<(r[f]-r[u])*(o-n[u])/(n[f]-n[u])+r[u]&&(i=!i);return i}(n,o,i,u,f);console.error("polygon 不是一个多边形定点集合")}});
